<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jtl.services.saascloudprovidercrm.dao.CWPackageMapper" >
  <resultMap id="BaseResultMap" type="com.jtl.services.saascloudprovidercrm.entity.CWPackage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="cw_contract_name" property="cwContractName" jdbcType="VARCHAR" />
    <result column="package_type" property="packageType" jdbcType="TINYINT" />
    <result column="source" property="source" jdbcType="TINYINT" />
    <result column="construction_id" property="constructionId" jdbcType="BIGINT" />
    <result column="business_id" property="businessId" jdbcType="BIGINT" />
    <result column="supplier_id" property="supplierId" jdbcType="BIGINT" />
    <result column="supplier_name" property="supplierName" jdbcType="VARCHAR" />
    <result column="package_amount" property="packageAmount" jdbcType="DECIMAL" />
    <result column="contract_amount" property="contractAmount" jdbcType="DECIMAL" />
    <result column="in_amount" property="inAmount" jdbcType="DECIMAL" />
    <result column="audit_amount" property="auditAmount" jdbcType="DECIMAL" />
    <result column="payment_amount" property="paymentAmount" jdbcType="DECIMAL" />
    <result column="deleted" property="deleted" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cw_contract_name, package_type, source, construction_id, business_id, supplier_id, 
    supplier_name, package_amount, contract_amount, in_amount, audit_amount, payment_amount, 
    deleted, remark, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from cw_package
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from cw_package
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.jtl.services.saascloudprovidercrm.entity.CWPackage" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cw_package (cw_contract_name, package_type, source, 
      construction_id, business_id, supplier_id, 
      supplier_name, package_amount, contract_amount, 
      in_amount, audit_amount, payment_amount, 
      deleted, remark, create_user, 
      create_time, update_user, update_time
      )
    values (#{cwContractName,jdbcType=VARCHAR}, #{packageType,jdbcType=TINYINT}, #{source,jdbcType=TINYINT}, 
      #{constructionId,jdbcType=BIGINT}, #{businessId,jdbcType=BIGINT}, #{supplierId,jdbcType=BIGINT}, 
      #{supplierName,jdbcType=VARCHAR}, #{packageAmount,jdbcType=DECIMAL}, #{contractAmount,jdbcType=DECIMAL}, 
      #{inAmount,jdbcType=DECIMAL}, #{auditAmount,jdbcType=DECIMAL}, #{paymentAmount,jdbcType=DECIMAL}, 
      #{deleted,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jtl.services.saascloudprovidercrm.entity.CWPackage" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cw_package
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cwContractName != null" >
        cw_contract_name,
      </if>
      <if test="packageType != null" >
        package_type,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="constructionId != null" >
        construction_id,
      </if>
      <if test="businessId != null" >
        business_id,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="supplierName != null" >
        supplier_name,
      </if>
      <if test="packageAmount != null" >
        package_amount,
      </if>
      <if test="contractAmount != null" >
        contract_amount,
      </if>
      <if test="inAmount != null" >
        in_amount,
      </if>
      <if test="auditAmount != null" >
        audit_amount,
      </if>
      <if test="paymentAmount != null" >
        payment_amount,
      </if>
      <if test="deleted != null" >
        deleted,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cwContractName != null" >
        #{cwContractName,jdbcType=VARCHAR},
      </if>
      <if test="packageType != null" >
        #{packageType,jdbcType=TINYINT},
      </if>
      <if test="source != null" >
        #{source,jdbcType=TINYINT},
      </if>
      <if test="constructionId != null" >
        #{constructionId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null" >
        #{businessId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null" >
        #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="packageAmount != null" >
        #{packageAmount,jdbcType=DECIMAL},
      </if>
      <if test="contractAmount != null" >
        #{contractAmount,jdbcType=DECIMAL},
      </if>
      <if test="inAmount != null" >
        #{inAmount,jdbcType=DECIMAL},
      </if>
      <if test="auditAmount != null" >
        #{auditAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentAmount != null" >
        #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null" >
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jtl.services.saascloudprovidercrm.entity.CWPackage" >
    update cw_package
    <set >
      <if test="cwContractName != null" >
        cw_contract_name = #{cwContractName,jdbcType=VARCHAR},
      </if>
      <if test="packageType != null" >
        package_type = #{packageType,jdbcType=TINYINT},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=TINYINT},
      </if>
      <if test="constructionId != null" >
        construction_id = #{constructionId,jdbcType=BIGINT},
      </if>
      <if test="businessId != null" >
        business_id = #{businessId,jdbcType=BIGINT},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=BIGINT},
      </if>
      <if test="supplierName != null" >
        supplier_name = #{supplierName,jdbcType=VARCHAR},
      </if>
      <if test="packageAmount != null" >
        package_amount = #{packageAmount,jdbcType=DECIMAL},
      </if>
      <if test="contractAmount != null" >
        contract_amount = #{contractAmount,jdbcType=DECIMAL},
      </if>
      <if test="inAmount != null" >
        in_amount = #{inAmount,jdbcType=DECIMAL},
      </if>
      <if test="auditAmount != null" >
        audit_amount = #{auditAmount,jdbcType=DECIMAL},
      </if>
      <if test="paymentAmount != null" >
        payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jtl.services.saascloudprovidercrm.entity.CWPackage" >
    update cw_package
    set cw_contract_name = #{cwContractName,jdbcType=VARCHAR},
      package_type = #{packageType,jdbcType=TINYINT},
      source = #{source,jdbcType=TINYINT},
      construction_id = #{constructionId,jdbcType=BIGINT},
      business_id = #{businessId,jdbcType=BIGINT},
      supplier_id = #{supplierId,jdbcType=BIGINT},
      supplier_name = #{supplierName,jdbcType=VARCHAR},
      package_amount = #{packageAmount,jdbcType=DECIMAL},
      contract_amount = #{contractAmount,jdbcType=DECIMAL},
      in_amount = #{inAmount,jdbcType=DECIMAL},
      audit_amount = #{auditAmount,jdbcType=DECIMAL},
      payment_amount = #{paymentAmount,jdbcType=DECIMAL},
      deleted = #{deleted,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>